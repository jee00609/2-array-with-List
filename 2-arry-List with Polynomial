#include<stdio.h>
#define MAX_DEGREE 50
#define MAX(a,b) ((a>b)?a:b)


typedef struct{
	int degree;
	float coef[MAX_DEGREE][2];
}polynomial;
 
polynomial addPoly(polynomial,polynomial);
void printPoly(polynomial);

polynomial addPoly(polynomial A,polynomial B){

	polynomial C;
	int A_index=0,B_index=0,C_index=0;
	int A_degree=A.degree;
	int B_degree=B.degree;


	C.degree=MAX(A.degree,B.degree);
	while(A_index <=A.degree && B_index <=B.degree){
        
		
		if(A_degree > B_degree){                                                                                                                          
			C.coef[C_index++][0]=A.coef[A_index++][0]; 	                                                                   
			A_degree--;
		}
		else if(A_degree == B_degree){

			C.coef[C_index++][0]=A.coef[A_index++][0]+B.coef[B_index++][0];
			A_degree--;
			B_degree--;
		}
		else{
			C.coef[C_index++][0]=B.coef[B_index++][0];
			B_degree--;
		}
	}
	return C;

}
 
////////////////////////////////////////////////////////////////


void printPoly(polynomial P){

	int i,degree;
	degree = P.degree;

	for(i=0;i<=P.degree;i++){

		printf("%3.0f x ^%d",P.coef[i][0],degree--);

		if(i<P.degree){
			printf(" +");
		}

	}
	printf("\n");
}

void main()
{

	polynomial A ={3,{{4,3},{3,2},{5,1},{0,0}}};
	polynomial B ={4,{{3,4},{1,3},{0,2},{2,1},{1,0}}};
	polynomial C;

	C=addPoly(A,B);

 

	printf("\nA(x) =");	printPoly(A);
	printf("\nB(x) =");	printPoly(B);
	printf("\nC(x) =");	printPoly(C);

	getchar();
}
